!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports["vmap-svg"]=t():e["vmap-svg"]=t()}(self,(function(){return function(){"use strict";var e={d:function(t,n){for(var i in n)e.o(n,i)&&!e.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:n[i]})},o:function(e,t){return Object.prototype.hasOwnProperty.call(e,t)}},t={};function n(e){const t=document.createElementNS("http://www.w3.org/2000/svg","svg");t.innerHTML=e,t.setAttribute("x","-9999"),t.setAttribute("y","-9999");const n=document.querySelector("body").appendChild(t),i=t.getBBox();return n.remove(),{w:i.width,h:i.height}}e.d(t,{default:function(){return o}});const i={common:{}};i.basic={...i.common};const[s]=[i.basic],a={common:{font:{base:"'IBM Plex Mono', 'SFMono-Regular', 'Andale Mono', AndaleMono, 'Lucida Console', 'Lucida Sans Typewriter', Consolas, monospace"},textSize:{base:12,sm:10}}};a.basic={...s,...a.common},a.basic.applyStyles=function(){};var o={draw:function(e,t,i,s){const{vmapPad:o,strokeC:f,vmapC:c,figPad:p,figC:u,hideInputLabel:m,hideOrderLabel:h,customLabel:d,fullInputLabel:g,inputLabelMax:$,styleClass:x}={vmapPad:0,strokeC:"#fff",vmapC:"none",figPad:0,figC:"#fff",hideInputLabel:!1,hideOrderLabel:!1,fullInputLabel:!1,inputLabelMax:200,customLabel:void 0,styleClass:"basic",...s},y=a[x],[w,v]=[y.textSize,y.font.base],{vnum:b,margins:z}=e.data,M=e.scale,S=z[0],L=M[0]+S,C=M[1]+S,P=Math.sqrt(2*L**2),k=Math.sqrt(2*C**2),A={w:M[0]+o,h:M[1]+o};A.elem=`<svg class="vmap" width=${A.w} height=${A.h} viewBox="-${S/2+o/2} -${S/2+o/2} ${P+o} ${k+o}">\n    <rect x="-${o/2}" y="-${o/2}" width="${P+o}" height="${k+o}" fill="${c}"></rect>\n    <g transform="translate(0,${k/2}) rotate(-45,0,0)" stroke="${f}" stroke-width="${S}">${l(e)}</g>\n  </svg>`;const j={elem:((e,t)=>{if(void 0!==t)return t;let n="";if(!h&&b>0&&(n+=function(e,t='x="0" y="0"',n){const{maxLineWidth:i,font:s,textSize:a,leading:o}={maxLineWidth:60,font:"inherit",textSize:12,leading:4,...n};return`<text ${t} style="font-family: ${s}; font-size: ${a}px; dominant-baseline: hanging;">${e.reduce(((e,t,n)=>e+(n>0?'<tspan y="0"> > </tspan>':"")+((e,t="html")=>{let n=[];if(n="svg"===t?['<tspan y="0">',"</tspan>"]:["",""],e.length>1){const i=e.split("_");let s=[];return s="svg"===t?['<tspan style="font-size: .8em;" dx="0" dy="6">',"</tspan>"]:["<sub>","</sub>"],i.length>1?`${n[0]+i[0]+n[1]+s[0]+i[1]+s[1]}`:n[0]+e+n[1]}return n[0]+e+n[1]})(t,"svg")),"")}</text>`}(i,'y="0"',{font:v,textSize:w.base})),!m){const t=e.includes("::"),i=t?"":"ƒ = ",s=t?e.split("::")[0].length+256:$,a=t?`…(${4**b})`:'… <tspan style="font-style: italic">+more</tspan>';n+=r(e,'y="0"'+(n.length>0?` dy="${w.base+w.sm-2}px"`:""),{prefix:i,truncated:!g,truncMax:s,truncSuffix:a,font:v,textSize:w.sm})}return n})(t,d),pos:{x:0,y:A.h+10}};j.size=n(j.elem);const B=[Math.max(0,j.size.w-A.w),j.size.h>0?j.size.h+(j.pos.y-A.h):0],I={};return I.size={w:A.w+B[0]+p,h:A.h+B[1]+p},I.elem=`<svg class="vmap-figure" xmlns="http://www.w3.org/2000/svg" width="${I.size.w}" height="${I.size.h}" viewBox="-${p/2} -${p/2} ${I.size.w} ${I.size.h}">\n    <rect x="-${p/2}" y="-${p/2}" width="${I.size.w}" height="${I.size.h}" fill="${u}"></rect>\n    <g>${A.elem}</g>\n    <g transform="translate(${j.pos.x},${j.pos.y})">${j.elem}</g>\n  </svg>`,I},drawPersp:function(e,t,i){const{figPad:s,figC:o,margin:l,customLabel:f,styleClass:c}={figPad:0,figC:"#fff",margin:20,customLabel:void 0,styleClass:"basic",...i},p=a[c],[u,m]=[p.textSize,p.font.base],h={vmaps:e,input:t,options:i},d={x:Math.floor(l/4),y:Math.floor(l/2)},g=e.length,$=e[0].size,x=Math.min(g,6),y=Math.floor(g/x),w=$.w*x+2*d.x*(x-1),v=$.h*y+2*d.y*(y-1),b=e.map((e=>({elem:e.elem}))).reduce(((e,t,n)=>{const i=n%x,s=Math.floor(n/x),a=[$.w*i+2*d.x*i,$.h*s+2*d.y*s];return e+`<g class="vmap-item" transform="translate(${a[0]},${a[1]})">${t.elem}</g>`}),""),z={elem:((e,t)=>{if(void 0!==t)return t;const n=e.includes("::");return r(e,'y="0"',{prefix:n?"":"ƒ = ",truncated:!1,font:m,textSize:u.base})})(t,f),pos:{x:0,y:v+d.y},lineSpacing:d.y};z.size=n(z.elem);const M=[Math.max(0,z.size.w-w),z.size.h+(z.pos.y-v)+z.lineSpacing];return h.size={w:w+M[0]+s,h:v+M[1]+s},h.elem=`<svg class="vmap-perspectives-figure" xmlns="http://www.w3.org/2000/svg" width="${h.size.w}" height="${h.size.h}" viewBox="-${s/2} -${s/2} ${h.size.w} ${h.size.h}">\n    <rect x="-${s/2}" y="-${s/2}" width="${h.size.w}" height="${h.size.h}" fill="${o}"></rect>\n    <g class="vmap-perspectives vmap-table">${b}</g>\n    <g transform="translate(${z.pos.x},${z.pos.y})">\n      <line x1="0" y1="0" x2="${w}" y2="0" stroke="black" stroke-width="0.5" />\n      <g transform="translate(0,${z.lineSpacing})">${z.elem}</g>\n    </g>\n  </svg>`,h},drawList:function(e,t){const{margin:n,vAlign:i}={margin:20,vAlign:"bottom",...t};return`<div class="vmap-list" style="display: flex; flex-wrap: wrap; ${f(i)} margin: 0 -${Math.floor(n/2)}px">\n      ${e.reduce(((e,t)=>`${e}<div class="vmap-item" style="padding: ${Math.floor(n/4)}px ${Math.floor(n/2)}px">${t.elem}</div>`),"")}\n      </div>`}};function r(e,t='x="0" y="0"',n){const{prefix:i,maxLineWidth:s,truncated:a,truncMax:o,truncSuffix:r,font:l,textSize:f,leading:c}={prefix:"",maxLineWidth:60,truncated:!1,truncMax:1e3,truncSuffix:"…",font:"inherit",textSize:12,leading:4,...n},p=`font-family: ${l}; font-size: ${f}px; dominant-baseline: hanging;`;let u=i+e,m="";return a&&u.length>o&&(u=u.substr(0,o),m+=r),u=((e,t=1)=>[...new Array(Math.ceil(e.length/t))].map(((n,i)=>e.substr(t*i,t))))(u,s).reduce(((e,t,n)=>e+(n>0?((e,t)=>`<tspan x="0" dy="${t}">${e}</tspan>`)(t,f+c+"px"):t)),""),`<text ${t} style="${p}">${u+m}</text>`}function l(e,t=""){if(null!==e&&"object"==typeof e)return e.children?(t+=`<g transform="translate(${e.position[0]}, ${e.position[1]})">`,e.children.forEach((e=>{t+=l(e)})),t+="</g>"):t+=`<rect x="${e.position[0]}" y="${e.position[1]}" width="${e.scale[0]}" height="${e.scale[1]}" fill="${c(e.value)}"></rect>`;throw new Error("Not a subtree!")}const f=e=>`align-items: ${"top"===e?"flex-start":"center"===e?"center":"flex-end"};`,c=e=>0==e?"#000000":1==e?"#4757ff":2==e?"#ff0044":3==e?"#00ff5f":NaN;return t.default}()}));
//# sourceMappingURL=vmap-svg.min.js.map