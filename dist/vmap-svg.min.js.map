{"version":3,"sources":["webpack://vmap-svg/webpack/universalModuleDefinition","webpack://vmap-svg/webpack/bootstrap","webpack://vmap-svg/webpack/runtime/define property getters","webpack://vmap-svg/webpack/runtime/hasOwnProperty shorthand","webpack://vmap-svg/./node_modules/formsandlines-utils/lib/svg.js","webpack://vmap-svg/./node_modules/formsandlines-utils/lib/string.js","webpack://vmap-svg/./src/styles.js","webpack://vmap-svg/./src/main.js"],"names":["root","factory","exports","module","define","amd","self","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","getSvgSize","svgText","svg","document","createElementNS","innerHTML","setAttribute","container","querySelector","appendChild","size","getBBox","remove","w","width","h","height","global","common","basic","font","base","textSize","sm","applyStyles","draw","vmapTree","input","varorder","options","vmapPad","strokeC","vmapC","figPad","figC","hideInputLabel","hideOrderLabel","customLabel","fullInputLabel","inputLabelMax","styleClass","undefined","design","vnum","margins","data","scale","strokeW","bounds","rhomb","Math","sqrt","vmap","elem","constructSVG","figCaption","label","pos","maxLineWidth","leading","reduce","acc","curr","i","mode","tagRev","length","labelParts","split","tagSub","processLabel","orderLabel","isFormDNA","includes","prefix","truncMax","truncSuffix","inputLabel","truncated","caption","x","y","appendSize","max","chart","drawPersp","vmapPermutations","globalOptions","margin","vmaps","padding","floor","count","vmapSize","colNum","min","rowNum","tableSize","vmapItems","map","str","item","coords","lineSpacing","drawList","vmaps_svg","vAlign","getVAlign","style","output","appendix","substr","n","Array","ceil","d","breakStr","lineShift","svgLinebreak","subTree","mapSVG","children","position","forEach","child","vColor","value","Error","val","NaN"],"mappings":"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","file":"vmap-svg.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"vmap-svg\"] = factory();\n\telse\n\t\troot[\"vmap-svg\"] = factory();\n})(self, function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","/*  --------------------------------------------------------\n    Additions 03/2021\n*/\n\n// export function fitSvg(selector, padding) {\n//     // calculate real dimensions of a chart (assumes chart is a g-element wrapped inside an svg)\n//     d3.select(chart.node().parentElement)\n//         .attr('width', chart.node().getBBox().width + padding.left + padding.right)\n//         .attr('height', chart.node().getBBox().height + padding.top + padding.bottom);\n//   }\n\nexport function getSvgSize(svgText) {\n\tconst svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n\tsvg.innerHTML = svgText;\n\tsvg.setAttribute('x','-9999');\n\tsvg.setAttribute('y','-9999');\n\n\tconst container = document.querySelector('body').appendChild(svg);\n\n\tconst size = svg.getBBox();\n\tcontainer.remove();\n\treturn { w: size.width, h: size.height };\n}\n\nexport const svgLinebreak = (str, lineShift) => `<tspan x=\"0\" dy=\"${lineShift}\">${str}</tspan>`;\n\n/*  --------------------------------------------------------\n    Additions 01/2020 from:\n    https://observablehq.com/@formsandlines/js-toolbox\n*/\n\nexport function scaleSVG(svg, container, ratio) {\n    const prefixes = ['-ms-transform','-webkit-transform','-moz-transform','-o-transform','transform'];\n    prefixes.forEach(prefix => {\n        svg.style[prefix] = `scale(${ratio}) translate(0,0)`;\n    });\n    // container.style.width = parseInt(svg.getBBox().width * ratio) + 'px';\n    // container.style.height = parseInt(svg.getBBox().height * ratio) + 'px';\n    container.style.width = svg.getBBox().width * ratio + 'px';\n    container.style.height = svg.getBBox().height * ratio + 'px';\n}\n\n/*  --------------------------------------------------------\n    Additions 10/2020\n*/\n\nexport const processLabel = (label, mode='html') => {\n    /* Label processing to handle sub/superscript */\n\n    let tagRev = []; // tagRev resets y-position of label after subscripts (needed for svg)\n    if (mode === 'svg') tagRev = ['<tspan y=\"0\">','</tspan>'];\n    else tagRev = ['',''];\n\n    if (label.length > 1) {\n        const labelParts = label.split('_');\n\n        let tagSub = [];\n        if (mode === 'svg') tagSub = [`<tspan style=\"font-size: .8em;\" dx=\"0\" dy=\"6\">`,'</tspan>'];\n        else tagSub = ['<sub>','</sub>'];\n\n        return (labelParts.length > 1) ? `${tagRev[0] + labelParts[0] + tagRev[1] + tagSub[0] + labelParts[1] + tagSub[1]}` : tagRev[0]+label+tagRev[1];\n    }\n    else return tagRev[0]+label+tagRev[1];\n};","export function pad(num, size) {\n    /* pads 0s before number string\n       Source: https://stackoverflow.com/a/2998822\n       Credits to: InfinitiesLoop */\n\n    var s = num+\"\"; // converts number to string if not already a string\n    while (s.length < size) s = \"0\" + s;\n    return s;\n}\n\n// former String.prototype.replaceAll\nexport function replaceAll(str, find, replace, escapeMeta) {\n    /*  Modified from: https://stackoverflow.com/questions/1144783/how-to-replace-all-occurrences-of-a-string-in-javascript \n    Credits to: Sean Bright */\n    if(escapeMeta) find = escapeRegExp(find);\n    return str.replace(new RegExp(find, 'g'), replace);\n};\n\nexport function escapeRegExp(str) {\n    return str.replace(/([.*+?^=!:${}()|\\[\\]\\/\\\\])/g, \"\\\\$1\");\n}\n\n// former String.prototype.addBefore\nexport function addBefore(str, index, replacement) {\n    return str.substr(0, index) + replacement+ str.substr(index);\n}\n\n// former String.prototype.replaceAt\nexport function replaceAt(str, index, replacement) {\n    return str.substr(0, index) + replacement+ str.substr(index + replacement.length);\n}\n\n/*  --------------------------------------------------------\n    Additions 01/2020 from:\n    https://observablehq.com/@formsandlines/js-toolbox\n*/\n\nexport const truncateStr = (str,limit,appendix='') => str.length > limit ? (str.substr(0,limit) + appendix) : str;\n\n\n/* Breaks string up in parts of length n (x <= n for the last part) \n   from: https://observablehq.com/@formsandlines/js-toolbox\n*/\nexport const breakStr = (str,n=1) => [...new Array(Math.ceil(str.length/n))].map((d,i) => str.substr(n*i,n));\n\n","// -----------------------\n// global styles\n\nconst global = {\n    common: {\n        // font: {family: 'sans-serif', size: '14px', style: 'normal'},\n    }\n};\nglobal.basic = {\n    ...global.common,\n};\nconst [basic] = [global.basic];\n\nexport const vmap = {\n    common: {\n        font: {base: `'IBM Plex Mono', 'SFMono-Regular', 'Andale Mono', AndaleMono, 'Lucida Console', 'Lucida Sans Typewriter', Consolas, monospace`},\n        textSize: {base: 12, sm: 10},\n    }\n};\n\nvmap.basic = {\n    ...basic,\n    ...vmap.common,\n};\nvmap.basic.applyStyles = function() {\n\n};","import { processLabel, getSvgSize, breakStr, svgLinebreak } from 'formsandlines-utils';\n\nimport * as styles from './styles.js';\n\nexport default { draw, drawPersp, drawList };\n\n// ===================================================================\n//     formform module 'vmap-svg'\n//     -- since 2020, by Peter Hofmann (formsandlines.eu)\n// ===================================================================\n\nexport function draw (vmapTree, input, varorder, options) {\n  /* Generates SVG output for a given vmap tree */\n\n  // option defaults\n  const {vmapPad, strokeC, vmapC, figPad, figC, hideInputLabel, hideOrderLabel, customLabel, fullInputLabel, inputLabelMax, styleClass} = {\n    vmapPad: 0, strokeC: '#fff', vmapC: 'none', figPad: 0, figC: '#fff',\n    hideInputLabel: false, hideOrderLabel: false, fullInputLabel: false, inputLabelMax: 200, \n    customLabel: undefined, styleClass: 'basic',\n    ...options};\n\n  const design = styles.vmap[styleClass];\n  const [textSize, font] = [design.textSize, design.font.base];\n\n  const {vnum, margins} = vmapTree.data;\n  const scale = vmapTree.scale;\n  const strokeW = margins[0];\n  // const len = Math.sqrt(4**vnum); // length of dna without '::'\n  const bounds = {w: scale[0] + strokeW, h: scale[1] + strokeW};\n  const rhomb = {w: Math.sqrt(2 * (bounds.w**2)), h: Math.sqrt(2 * (bounds.h**2))};\n\n\n  const caption = (input, customLabel) => {\n    if (customLabel !== undefined) return customLabel;\n\n    let label = '';\n    if (!hideOrderLabel && vnum > 0) {\n      const pos = 'y=\"0\"';\n\n      label += orderLabel(varorder, pos, {font: font, textSize: textSize.base});\n    }\n    if (!hideInputLabel) {\n      const isFormDNA = input.includes('::');\n\n      const prefix = isFormDNA ? '' : 'ƒ = ';\n      const truncMax = isFormDNA ? (input.split('::')[0].length + 4**4) : inputLabelMax;\n      const truncSuffix = isFormDNA ? `…(${4**vnum})` : `… <tspan style=\"font-style: italic\">+more</tspan>`;\n\n      const pos = 'y=\"0\"' + (label.length > 0 ? ` dy=\"${textSize.base + textSize.sm - 2}px\"` : '');\n\n      label += inputLabel(input, pos, {prefix: prefix, truncated: !fullInputLabel, truncMax: truncMax, truncSuffix: truncSuffix, font: font, textSize: textSize.sm});\n    }\n    return label;\n  };\n\n  const vmap = {w: (scale[0] + vmapPad), h: (scale[1] + vmapPad)};\n\n  vmap.elem = `<svg class=\"vmap\" width=${vmap.w} height=${vmap.h} viewBox=\"-${strokeW/2 + vmapPad/2} -${strokeW/2 + vmapPad/2} ${rhomb.w + vmapPad} ${rhomb.h + vmapPad}\">\n    <rect x=\"-${vmapPad/2}\" y=\"-${vmapPad/2}\" width=\"${rhomb.w + vmapPad}\" height=\"${rhomb.h + vmapPad}\" fill=\"${vmapC}\"></rect>\n    <g transform=\"translate(0,${rhomb.h/2}) rotate(-45,0,0)\" stroke=\"${strokeC}\" stroke-width=\"${strokeW}\">${ constructSVG(vmapTree) }</g>\n  </svg>`;\n\n  const figCaption = {elem: caption(input, customLabel), pos: {x: 0, y: (vmap.h + 10)}};\n  figCaption.size = getSvgSize(figCaption.elem);\n\n  const appendSize = [Math.max(0, (figCaption.size.w - vmap.w)),\n            (figCaption.size.h > 0 ? (figCaption.size.h + (figCaption.pos.y - vmap.h)) : 0)];\n\n  const chart = {};\n\n  chart.size = {w: (vmap.w + appendSize[0] + figPad), h: (vmap.h + appendSize[1] + figPad)};\n\n  chart.elem = `<svg class=\"vmap-figure\" xmlns=\"http://www.w3.org/2000/svg\" width=\"${chart.size.w}\" height=\"${chart.size.h}\" viewBox=\"-${figPad/2} -${figPad/2} ${chart.size.w} ${chart.size.h}\">\n    <rect x=\"-${figPad/2}\" y=\"-${figPad/2}\" width=\"${chart.size.w}\" height=\"${chart.size.h}\" fill=\"${figC}\"></rect>\n    <g>${ vmap.elem }</g>\n    <g transform=\"translate(${figCaption.pos.x},${figCaption.pos.y})\">${ figCaption.elem }</g>\n  </svg>`;\n\n  return chart;\n}\n\nfunction orderLabel (varorder, pos='x=\"0\" y=\"0\"', options=undefined) {\n  /* Generates an order label (e.g. \"a > b > c\") from variable order */\n  const {maxLineWidth, font, textSize, leading} = \n    { maxLineWidth: 60, font: 'inherit', textSize: 12, leading: 4, ...options };\n  const style = `font-family: ${font}; font-size: ${textSize}px; dominant-baseline: hanging;`;\n\n  const output = varorder.reduce((acc,curr,i) => acc + (i > 0 ? '<tspan y=\"0\"> > </tspan>' : '') + processLabel(curr, 'svg'),'' );\n\n  // output = breakStr(output, maxLineWidth) // <-- fix tag breaks\n  // \t.reduce((str,curr,i) => str + (i > 0 ? svgLinebreak(curr, (textSize + leading + 'px')) : curr), '');\n\n  return `<text ${pos} style=\"${style}\">${output}</text>`;\n}\n\nfunction inputLabel (input, pos='x=\"0\" y=\"0\"', options=undefined) {\n  /* Generates an input label (e.g. \"ƒ = ((a)b)\" or \"::3210\") */\n  const {prefix, maxLineWidth, truncated, truncMax, truncSuffix, font, textSize, leading} = \n    {prefix: '', maxLineWidth: 60, truncated: false, truncMax: 1000, truncSuffix: '…', font: 'inherit', textSize: 12, leading: 4, ...options };\n  const style = `font-family: ${font}; font-size: ${textSize}px; dominant-baseline: hanging;`;\n\n  let output = prefix + input;\n  let appendix = '';\n\n  if (truncated && (output.length > truncMax)) {\n    output = output.substr(0,truncMax);\n    appendix += truncSuffix;\n  }\n  output = breakStr(output, maxLineWidth)\n    .reduce((str,curr,i) => str + (i > 0 ? svgLinebreak(curr, (textSize + leading + 'px')) : curr), '');\n\n  return `<text ${pos} style=\"${style}\">${output + appendix}</text>`;\n}\n\nfunction constructSVG(subTree, mapSVG='') {\n  /* Recursive function to construct svg markup from vmap tree structure */\n\n  if(subTree !== null && typeof subTree == 'object') {\n    if(subTree.children) {\n      mapSVG += `<g transform=\"translate(${subTree.position[0]}, ${subTree.position[1]})\">`;\n\n      subTree.children.forEach(child => {\n        mapSVG += constructSVG(child);\n      });\n      mapSVG += '</g>';\n      return mapSVG;\n    }\n    else {\t\t\t\t\n      mapSVG += `<rect x=\"${subTree.position[0]}\" y=\"${subTree.position[1]}\" width=\"${subTree.scale[0]}\" height=\"${subTree.scale[1]}\" fill=\"${vColor(subTree.value)}\"></rect>`;\n      return mapSVG;\n    }\n  }\n  else {\n    throw new Error('Not a subtree!');\n  }\n}\n\n\nexport function drawPersp (vmapPermutations, input, globalOptions=undefined) {\n  /* Constructs vmap perspectives as HTML output (flex list) */\n\n  const {figPad, figC, margin, customLabel, styleClass} = \n    { figPad: 0, figC: '#fff', margin: 20, customLabel: undefined, styleClass: 'basic', ...globalOptions };\n\n  const design = styles.vmap[styleClass];\n  const [textSize, font] = [design.textSize, design.font.base];\n\n  const chart = {vmaps: vmapPermutations, input: input, options: globalOptions};\n\n\n  const padding = {x: (Math.floor(margin/4)), y: (Math.floor(margin/2))};\n  const count = vmapPermutations.length;\n  const vmapSize = vmapPermutations[0].size;\n\n  const colNum = Math.min(count, 6);\n  const rowNum = Math.floor(count/colNum);\n  const tableSize = { w: vmapSize.w * colNum + (padding.x*2) * (colNum-1),\n            h: vmapSize.h * rowNum + (padding.y*2) * (rowNum-1) };\n\n  const vmapItems = vmapPermutations.map(vmap => {\n    \n    return {elem: vmap.elem};\n  }).reduce((str,item,i) => {\n    const x = i%colNum;\n    const y = Math.floor(i/colNum);\n\n    const coords = [vmapSize.w * x + (padding.x*2) * x,\n            vmapSize.h * y + (padding.y*2) * y];\n    return str+ `<g class=\"vmap-item\" transform=\"translate(${coords[0]},${coords[1]})\">${item.elem}</g>`;\n  },'');\n\n  const caption = (input, customLabel) => {\n    if (customLabel !== undefined) return customLabel;\n\n    const isFormDNA = input.includes('::');\n    const prefix = isFormDNA ? '' : 'ƒ = ';\n    const pos = 'y=\"0\"'; //  dy=\"${textSize.base + textSize.sm - 2}px\"\n\n    return inputLabel(input, pos, {prefix: prefix, truncated: false, font: font, textSize: textSize.base});\n  };\n\n  const figCaption = {elem: caption(input, customLabel), pos: {x: 0, y: tableSize.h + padding.y}, lineSpacing: padding.y};\n  figCaption.size = getSvgSize(figCaption.elem);\n\n  const appendSize = [Math.max(0, (figCaption.size.w - tableSize.w)),\n            figCaption.size.h + (figCaption.pos.y - tableSize.h) + figCaption.lineSpacing];\n\n  // const listMargin = {x: 0, y: Math.floor(margin/2)};\n\n  chart.size = {w: (tableSize.w + appendSize[0] + figPad), \n          h: (tableSize.h + appendSize[1] + figPad)};\n\n  chart.elem = `<svg class=\"vmap-perspectives-figure\" xmlns=\"http://www.w3.org/2000/svg\" width=\"${chart.size.w}\" height=\"${chart.size.h}\" viewBox=\"-${figPad/2} -${figPad/2} ${chart.size.w} ${chart.size.h}\">\n    <rect x=\"-${figPad/2}\" y=\"-${figPad/2}\" width=\"${chart.size.w}\" height=\"${chart.size.h}\" fill=\"${figC}\"></rect>\n    <g class=\"vmap-perspectives vmap-table\">${ vmapItems }</g>\n    <g transform=\"translate(${figCaption.pos.x},${figCaption.pos.y})\">\n      <line x1=\"0\" y1=\"0\" x2=\"${tableSize.w}\" y2=\"0\" stroke=\"black\" stroke-width=\"0.5\" />\n      <g transform=\"translate(0,${figCaption.lineSpacing})\">${ figCaption.elem }</g>\n    </g>\n  </svg>`;\n\n  return chart;\n}\n\n\nexport function drawList (vmaps_svg, globalOptions=undefined) {\n  /* Constructs multiple vmaps as SVG output */\n\n  const {margin, vAlign} = { margin: 20, vAlign: 'bottom', ...globalOptions };\n\n  // const vmapItems = vmapPermutations_svg.map(draw => {\n      \n  // \treturn {size: draw.size, elem: draw.elem};\n  // }).reduce((str,item,i,arr) => {\n\n  // \t// const shiftX = (i > 0) ? ( arr[0].size.w * i + (padding.x*2) * i ) : 0;\n  // \treturn str+ `<g class=\"vmap-item\" transform=\"translate(${shiftX},0)\">${item.elem}</g>`;\n  // },'');\n\n  return `<div class=\"vmap-list\" style=\"display: flex; flex-wrap: wrap; ${getVAlign(vAlign)} margin: 0 -${Math.floor(margin/2)}px\">\n      ${ vmaps_svg.reduce((str, draw) => `${str}<div class=\"vmap-item\" style=\"padding: ${Math.floor(margin/4)}px ${Math.floor(margin/2)}px\">${draw.elem}</div>`,'') }\n      </div>`;\n}\n\n// -----------------------------------------------------------\n//                         Helper\n// -----------------------------------------------------------\n\nconst getVAlign = vAlign => {\n  // >>> as helper\n  const alignItems = vAlign === 'top'    ? 'flex-start'\n            : vAlign === 'center' ? 'center'\n            : vAlign === 'bottom' ? 'flex-end' : 'flex-end';\n  return `align-items: ${alignItems};`;\n};\n\nconst vColor = val => {\n  /* Value to color map for vmap */\n  return val == 0 ? '#000000'\n       : val == 1 ? '#4757ff'\n       : val == 2 ? '#ff0044'\n       : val == 3 ? '#00ff5f'\n       : NaN;\n};"],"sourceRoot":""}