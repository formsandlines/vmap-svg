{"version":3,"sources":["webpack://vmap-svg/webpack/universalModuleDefinition","webpack://vmap-svg/webpack/bootstrap","webpack://vmap-svg/./src/common/helper.js","webpack://vmap-svg/./src/styles.js","webpack://vmap-svg/./src/main.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","getSvgSize","svgText","svg","document","createElementNS","innerHTML","setAttribute","container","querySelector","appendChild","size","getBBox","remove","w","width","h","height","global","common","basic","font","base","textSize","sm","formDNA_html","formula","dna","vars","undefined","length","join","markupQuartCycles","vmap_svg","vmapTree","input","varorder","options","vmapPad","strokeC","vmapC","figPad","figC","hideInputLabel","hideOrderLabel","customLabel","fullInputLabel","inputLabelMax","styleClass","design","vnum","margins","data","scale","strokeW","bounds","rhomb","Math","sqrt","chart","tree","vmap","elem","constructSVG","subTree","mapSVG","children","position","forEach","child","vColor","Error","figCaption","label","pos","maxLineWidth","leading","style","output","reduce","acc","curr","tagRev","labelParts","split","tagSub","processLabel","orderLabel","isFormDNA","includes","prefix","truncMax","truncSuffix","inputLabel","truncated","caption","x","y","appendSize","max","appendix","substr","str","Array","ceil","map","breakStr","lineShift","svgLinebreak","vmapPerspectives_svg","vmapPermutations","globalOptions","margin","vmaps","padding","floor","count","vmapSize","colNum","min","rowNum","tableSize","vmapItems","item","coords","lineSpacing","vmapList_svg","vmaps_svg","vAlign","getVAlign","applyStyles","arr","val","NaN"],"mappings":"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","file":"vmap_svg.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"vmap-svg\"] = factory();\n\telse\n\t\troot[\"vmap-svg\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export const processLabel = (label, mode='html') => {\n    /* Label processing to handle sub/superscript */\n\n    let tagRev = []; // tagRev resets y-position of label after subscripts (needed for svg)\n    if (mode === 'svg') tagRev = ['<tspan y=\"0\">','</tspan>'];\n    else tagRev = ['',''];\n\n    if (label.length > 1) {\n        const labelParts = label.split('_');\n\n        let tagSub = [];\n        if (mode === 'svg') tagSub = [`<tspan style=\"font-size: .8em;\" dx=\"0\" dy=\"6\">`,'</tspan>'];\n        else tagSub = ['<sub>','</sub>'];\n\n        return (labelParts.length > 1) ? `${tagRev[0] + labelParts[0] + tagRev[1] + tagSub[0] + labelParts[1] + tagSub[1]}` : tagRev[0]+label+tagRev[1];\n    }\n    else return tagRev[0]+label+tagRev[1];\n};\n\nexport function getSvgSize(svgText) {\n\tconst svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n\tsvg.innerHTML = svgText;\n\tsvg.setAttribute('x','-9999');\n\tsvg.setAttribute('y','-9999');\n\n\tconst container = document.querySelector('body').appendChild(svg);\n\n\tconst size = svg.getBBox();\n\tcontainer.remove();\n\treturn { w: size.width, h: size.height };\n}\n\nexport const breakStr = (str,n=1) => [...new Array(Math.ceil(str.length/n))].map((d,i) => str.substr(n*i,n));\n\nexport const svgLinebreak = (str, lineShift) => `<tspan x=\"0\" dy=\"${lineShift}\">${str}</tspan>`;","// -----------------------\n// global styles\n\nconst global = {\n    common: {\n        // font: {family: 'sans-serif', size: '14px', style: 'normal'},\n    }\n};\nglobal.basic = {\n    ...global.common,\n};\nconst [basic] = [global.basic];\n\nexport const vmap = {\n    common: {\n        font: {base: `'IBM Plex Mono', 'SFMono-Regular', 'Andale Mono', AndaleMono, 'Lucida Console', 'Lucida Sans Typewriter', Consolas, monospace`},\n        textSize: {base: 12, sm: 10},\n    }\n};\n\nvmap.basic = {\n    ...basic,\n    ...vmap.common,\n};\nvmap.basic.applyStyles = function() {\n\n}","import { processLabel, getSvgSize, breakStr, svgLinebreak } from './common/helper';\n\nimport * as styles from './styles.js';\n\n\n// ===========================================================\n//                      formDNA markup\n// ===========================================================\n\nexport function formDNA_html (formula, dna, vars) {\n\t/* Constructs an HTML wrapper for formDNA */\n\n\t// construct HTML markup for the formDNA\n\tconst formStr = formula !== undefined ? `<span class=\"dna-form\" title=\"FORM\">${formula}</span>` : '';\n\n\tconst varorderStr = vars && dna.length > 1 ? '.<span class=\"dna-varorder\" title=\"Variable interpretation order\">['+vars.join(',')+']</span>' : '';\n\n\treturn `<div id=\"dna\"><code>${formStr + varorderStr}::<span class=\"dna-code\">${markupQuartCycles(dna)}</span></code></div>`;\n}\n\n// ===========================================================\n//                        vmap markup\n// ===========================================================\n\nexport function vmap_svg (vmapTree, input, varorder, options) {\n\t/* Generates SVG output for a given vmap tree */\n\n\t// option defaults\n\tconst {vmapPad, strokeC, vmapC, figPad, figC, hideInputLabel, hideOrderLabel, customLabel, fullInputLabel, inputLabelMax, styleClass} = {\n\t\tvmapPad: 0, strokeC: `#fff`, vmapC: `none`, figPad: 0, figC: `#fff`,\n\t\thideInputLabel: false, hideOrderLabel: false, fullInputLabel: false, inputLabelMax: 200, \n\t\tcustomLabel: undefined, styleClass: 'basic',\n\t\t...options};\n\n\tconst design = styles.vmap[styleClass];\n\tconst [textSize, font] = [design.textSize, design.font.base];\n\n\tconst {vnum, margins} = vmapTree.data;\n\tconst scale = vmapTree.scale;\n\tconst strokeW = margins[0];\n\t// const len = Math.sqrt(4**vnum); // length of dna without '::'\n\tconst bounds = {w: scale[0] + strokeW, h: scale[1] + strokeW};\n\tconst rhomb = {w: Math.sqrt(2 * (bounds.w**2)), h: Math.sqrt(2 * (bounds.h**2))};\n\n\tconst chart = {tree: vmapTree, input: input, varorder: varorder, options: options};\n\n\t// if (output == 'mixed') {\n\t\t// svg with html wrapper\n\n\t\t// const caption = () => {\n\t\t// \tif (customLabel !== undefined) return `<figcaption style=\"word-wrap: break-word;\">${customLabel}</figcaption>`;\n\t\t// \tif (!(hideInputLabel && hideOrderLabel)) {\n\t\t// \t\tlet label = '';\n\t\t// \t\tif (!hideOrderLabel) label += `${varorder.reduce((acc,curr,i) => acc + (i > 0 ? ' > ' : '') + processLabel(curr),'' )}${hideInputLabel || vnum < 1 ? '' : '<br/>'}`;\n\t\t// \t\tif (!hideInputLabel) {\n\t\t// \t\t\tconst isFormDNA = input.includes('::');\n\t\t// \t\t\tif (isFormDNA) label += `<code style=\"font-size:0.8em;\">${fullInputLabel ? input : truncateStr(input,(input.split('::')[0].length + 4**4),`…(${4**vnum})`)}</code>`;\n\t\t// \t\t\telse label += 'ƒ = '+(fullInputLabel ? input : truncateStr(input,inputLabelMax,`… <i>+more</i>`));\n\t\t// \t\t}\n\t\t// \t\treturn `<figcaption style=\"word-wrap: break-word;\">${label}</figcaption>`;\n\t\t// \t}\n\t\t// \treturn '';\n\t\t// }\n\n\t\t// chart.elem = `<figure class=\"vmap-figure\" style=\"margin: 0;\">\n\t\t// \t<svg class=\"vmap\" style=\"background: ${bgC}; padding: ${vmapPad};\" width=${scale[0]} height=${scale[1]}\n\t\t// \tfill=\"white\" stroke=\"${strokeC}\" stroke-width=\"${strokeW}\"\n\t\t// \tviewBox=\"-${strokeW/2} -${strokeW/2} ${rhomb.w} ${rhomb.h}\">\n\t\t// \t<g transform=\"translate(${0},${rhomb.h/2}) rotate(-45,0,0)\">${ constructSVG(vmapTree) }</g>\n\t\t// \t</svg>\n\t\t// \t${ caption() }\n\t\t// \t</figure>`;\n\n\t// } else {\n\t\t// pure svg output\n\n\t\tconst caption = (input, customLabel) => {\n\t\t\tif (customLabel !== undefined) return customLabel;\n\n\t\t\tlet label = '';\n\t\t\tif (!hideOrderLabel && vnum > 0) {\n\t\t\t\tconst pos = `y=\"0\"`;\n\n\t\t\t\tlabel += orderLabel(varorder, pos, {font: font, textSize: textSize.base});\n\t\t\t}\n\t\t\tif (!hideInputLabel) {\n\t\t\t\tconst isFormDNA = input.includes('::');\n\n\t\t\t\tconst prefix = isFormDNA ? '' : `ƒ = `;\n\t\t\t\tconst truncMax = isFormDNA ? (input.split('::')[0].length + 4**4) : inputLabelMax;\n\t\t\t\tconst truncSuffix = isFormDNA ? `…(${4**vnum})` : `… <tspan style=\"font-style: italic\">+more</tspan>`;\n\n\t\t\t\tconst pos = `y=\"0\"` + (label.length > 0 ? ` dy=\"${textSize.base + textSize.sm - 2}px\"` : '');\n\n\t\t\t\tlabel += inputLabel(input, pos, {prefix: prefix, truncated: !fullInputLabel, truncMax: truncMax, truncSuffix: truncSuffix, font: font, textSize: textSize.sm});\n\t\t\t}\n\t\t\treturn label;\n\t\t}\n\n\t\tconst vmap = {w: (scale[0] + vmapPad), h: (scale[1] + vmapPad)};\n\n\t\tvmap.elem = `<svg class=\"vmap\" width=${vmap.w} height=${vmap.h} viewBox=\"-${strokeW/2 + vmapPad/2} -${strokeW/2 + vmapPad/2} ${rhomb.w + vmapPad} ${rhomb.h + vmapPad}\">\n\t\t\t<rect x=\"-${vmapPad/2}\" y=\"-${vmapPad/2}\" width=\"${rhomb.w + vmapPad}\" height=\"${rhomb.h + vmapPad}\" fill=\"${vmapC}\"></rect>\n\t\t\t<g transform=\"translate(0,${rhomb.h/2}) rotate(-45,0,0)\" stroke=\"${strokeC}\" stroke-width=\"${strokeW}\">${ constructSVG(vmapTree) }</g>\n\t\t</svg>`;\n\n\t\tconst figCaption = {elem: caption(input, customLabel), pos: {x: 0, y: (vmap.h + 10)}};\n\t\tfigCaption.size = getSvgSize(figCaption.elem);\n\n\t\tconst appendSize = [Math.max(0, (figCaption.size.w - vmap.w)),\n\t\t\t\t\t\t\t(figCaption.size.h > 0 ? (figCaption.size.h + (figCaption.pos.y - vmap.h)) : 0)];\n\n\t\tchart.size = {w: (vmap.w + appendSize[0] + figPad), h: (vmap.h + appendSize[1] + figPad)};\n\n\t\tchart.elem = `<svg class=\"vmap-figure\" xmlns=\"http://www.w3.org/2000/svg\" width=\"${chart.size.w}\" height=\"${chart.size.h}\" viewBox=\"-${figPad/2} -${figPad/2} ${chart.size.w} ${chart.size.h}\">\n\t\t\t<rect x=\"-${figPad/2}\" y=\"-${figPad/2}\" width=\"${chart.size.w}\" height=\"${chart.size.h}\" fill=\"${figC}\"></rect>\n\t\t\t<g>${ vmap.elem }</g>\n\t\t\t<g transform=\"translate(${figCaption.pos.x},${figCaption.pos.y})\">${ figCaption.elem }</g>\n\t\t</svg>`;\n\t// }\n\n\treturn chart;\n}\n\nfunction orderLabel (varorder, pos='x=\"0\" y=\"0\"', options=undefined) {\n\t/* Generates an order label (e.g. \"a > b > c\") from variable order */\n\tconst {maxLineWidth, font, textSize, leading} = \n\t\t{ maxLineWidth: 60, font: 'inherit', textSize: 12, leading: 4, ...options };\n\tconst style = `font-family: ${font}; font-size: ${textSize}px; dominant-baseline: hanging;`;\n\n\tlet output = varorder.reduce((acc,curr,i) => acc + (i > 0 ? '<tspan y=\"0\"> > </tspan>' : '') + processLabel(curr, 'svg'),'' );\n\n\t// output = breakStr(output, maxLineWidth) // <-- fix tag breaks\n\t// \t.reduce((str,curr,i) => str + (i > 0 ? svgLinebreak(curr, (textSize + leading + 'px')) : curr), '');\n\n\treturn `<text ${pos} style=\"${style}\">${output}</text>`;\n}\n\nfunction inputLabel (input, pos='x=\"0\" y=\"0\"', options=undefined) {\n\t/* Generates an input label (e.g. \"ƒ = ((a)b)\" or \"::3210\") */\n\tconst {prefix, maxLineWidth, truncated, truncMax, truncSuffix, font, textSize, leading} = \n\t\t{prefix: '', maxLineWidth: 60, truncated: false, truncMax: 1000, truncSuffix: '…', font: 'inherit', textSize: 12, leading: 4, ...options };\n\tconst style = `font-family: ${font}; font-size: ${textSize}px; dominant-baseline: hanging;`;\n\n\tlet output = prefix + input;\n\tlet appendix = '';\n\n\tif (truncated && (output.length > truncMax)) {\n\t\toutput = output.substr(0,truncMax);\n\t\tappendix += truncSuffix;\n\t}\n\toutput = breakStr(output, maxLineWidth)\n\t\t.reduce((str,curr,i) => str + (i > 0 ? svgLinebreak(curr, (textSize + leading + 'px')) : curr), '');\n\n\treturn `<text ${pos} style=\"${style}\">${output + appendix}</text>`;\n}\n\nfunction constructSVG(subTree, mapSVG='') {\n\t/* Recursive function to construct svg markup from vmap tree structure */\n\n\tif(subTree !== null && typeof subTree == \"object\") {\n\t\tif(subTree.children) {\n\t\t\tmapSVG += `<g transform=\"translate(${subTree.position[0]}, ${subTree.position[1]})\">`;\n\n\t\t\tsubTree.children.forEach(child => {\n\t\t\t\tmapSVG += constructSVG(child);\n\t\t\t});\n\t\t\tmapSVG += `</g>`;\n\t\t\treturn mapSVG;\n\t\t}\n\t\telse {\t\t\t\t\n\t\t\tmapSVG += `<rect x=\"${subTree.position[0]}\" y=\"${subTree.position[1]}\" width=\"${subTree.scale[0]}\" height=\"${subTree.scale[1]}\" fill=\"${vColor(subTree.value)}\"></rect>`;\n\t\t\treturn mapSVG;\n\t\t}\n\t}\n\telse {\n\t\tthrow new Error('Not a subtree!');\n\t};\n}\n\n\nexport function vmapPerspectives_svg (vmapPermutations, input, globalOptions=undefined) {\n\t/* Constructs vmap perspectives as HTML output (flex list) */\n\n\tconst {figPad, figC, margin, customLabel, styleClass} = \n\t\t{ figPad: 0, figC: `#fff`,\n\t\t  margin: 20, customLabel: undefined, styleClass: 'basic', ...globalOptions };\n\n\tconst design = styles.vmap[styleClass];\n\tconst [textSize, font] = [design.textSize, design.font.base];\n\n\tconst chart = {vmaps: vmapPermutations, input: input, options: globalOptions};\n\n\t// if (output == 'mixed') {\n\t\t// const vmapItems = vmapPermutations.map(vmap => {\n\t\t// \treturn `<div class=\"vmap-item\" style=\"padding: ${Math.floor(margin/4)}px ${Math.floor(margin/2)}px\"> \n\t\t// \t\t\t${vmap.elem}</div>`}).reduce((str,item) => str+item,'');\n\n\t\t// const label = caption();\n\n\t\t// return `<figure class=\"vmap-perspectives\" style=\"max-width: none;\">\n\t\t// \t\t<div class=\"vmap-list\" style=\"display: flex; flex-wrap: wrap; margin: 0 -${Math.floor(margin/2)}px\">\n\t\t// \t\t${ vmapItems }\n\t\t// \t\t</div>\n\t\t// \t\t<figcaption style=\"border-top: 1px solid; padding-top: ${Math.floor(margin/4)}px; margin-top: ${Math.floor(margin/2)}px; word-wrap: break-word;\">${label}</figcaption>\n\t\t// \t\t</figure>`;\n\t// }\n\t// else {\n\t\tconst padding = {x: (Math.floor(margin/4)), y: (Math.floor(margin/2))};\n\t\tconst count = vmapPermutations.length;\n\t\tconst vmapSize = vmapPermutations[0].size;\n\n\t\tconst colNum = Math.min(count, 6);\n\t\tconst rowNum = Math.floor(count/colNum);\n\t\tconst tableSize = { w: vmapSize.w * colNum + (padding.x*2) * (colNum-1),\n\t\t\t\t\t\t\th: vmapSize.h * rowNum + (padding.y*2) * (rowNum-1) };\n\n\t\tconst vmapItems = vmapPermutations.map(vmap => {\n\t\t\t\n\t\t\treturn {elem: vmap.elem};\n\t\t}).reduce((str,item,i) => {\n\t\t\tconst x = i%colNum;\n\t\t\tconst y = Math.floor(i/colNum);\n\n\t\t\tconst coords = [vmapSize.w * x + (padding.x*2) * x,\n\t\t\t\t\t\t    vmapSize.h * y + (padding.y*2) * y];\n\t\t\treturn str+ `<g class=\"vmap-item\" transform=\"translate(${coords[0]},${coords[1]})\">${item.elem}</g>`;\n\t\t},'');\n\t\n\t\tconst caption = (input, customLabel) => {\n\t\t\tif (customLabel !== undefined) return customLabel;\n\n\t\t\tconst isFormDNA = input.includes('::');\n\t\t\tconst prefix = isFormDNA ? '' : `ƒ = `;\n\t\t\tconst pos = `y=\"0\"`; //  dy=\"${textSize.base + textSize.sm - 2}px\"\n\n\t\t\treturn inputLabel(input, pos, {prefix: prefix, truncated: false, font: font, textSize: textSize.base});\n\t\t}\n\n\t\tconst figCaption = {elem: caption(input, customLabel), pos: {x: 0, y: tableSize.h + padding.y}, lineSpacing: padding.y};\n\t\tfigCaption.size = getSvgSize(figCaption.elem);\n\n\t\tconst appendSize = [Math.max(0, (figCaption.size.w - tableSize.w)),\n\t\t\t\t\t\t\tfigCaption.size.h + (figCaption.pos.y - tableSize.h) + figCaption.lineSpacing];\n\n\t\t// const listMargin = {x: 0, y: Math.floor(margin/2)};\n\n\t\tchart.size = {w: (tableSize.w + appendSize[0] + figPad), \n\t\t\t\t\t  h: (tableSize.h + appendSize[1] + figPad)};\n\n\t\tchart.elem = `<svg class=\"vmap-perspectives-figure\" xmlns=\"http://www.w3.org/2000/svg\" width=\"${chart.size.w}\" height=\"${chart.size.h}\" viewBox=\"-${figPad/2} -${figPad/2} ${chart.size.w} ${chart.size.h}\">\n\t\t\t<rect x=\"-${figPad/2}\" y=\"-${figPad/2}\" width=\"${chart.size.w}\" height=\"${chart.size.h}\" fill=\"${figC}\"></rect>\n\t\t\t<g class=\"vmap-perspectives vmap-table\">${ vmapItems }</g>\n\t\t\t<g transform=\"translate(${figCaption.pos.x},${figCaption.pos.y})\">\n\t\t\t\t<line x1=\"0\" y1=\"0\" x2=\"${tableSize.w}\" y2=\"0\" stroke=\"black\" stroke-width=\"0.5\" />\n\t\t\t\t<g transform=\"translate(0,${figCaption.lineSpacing})\">${ figCaption.elem }</g>\n\t\t\t</g>\n\t\t</svg>`;\n\n\t\treturn chart;\n\t// }\n}\n\n\nexport function vmapList_svg (vmaps_svg, globalOptions=undefined) {\n\t/* Constructs multiple vmaps as SVG output */\n\n\tconst {margin, vAlign} = { margin: 20, vAlign: 'bottom', ...globalOptions }\n\n\t// const vmapItems = vmapPermutations_svg.map(vmap_svg => {\n\t\t\t\n\t// \treturn {size: vmap_svg.size, elem: vmap_svg.elem};\n\t// }).reduce((str,item,i,arr) => {\n\n\t// \t// const shiftX = (i > 0) ? ( arr[0].size.w * i + (padding.x*2) * i ) : 0;\n\t// \treturn str+ `<g class=\"vmap-item\" transform=\"translate(${shiftX},0)\">${item.elem}</g>`;\n\t// },'');\n\n\treturn `<div class=\"vmap-list\" style=\"display: flex; flex-wrap: wrap; ${getVAlign(vAlign)} margin: 0 -${Math.floor(margin/2)}px\">\n\t\t\t${ vmaps_svg.reduce((str, vmap_svg) => `${str}<div class=\"vmap-item\" style=\"padding: ${Math.floor(margin/4)}px ${Math.floor(margin/2)}px\">${vmap_svg.elem}</div>`,'') }\n\t\t\t</div>`\n};\n\n// -----------------------------------------------------------\n//                         Helper\n// -----------------------------------------------------------\n\nconst markupQuartCycles = (str) => {\n\t/* Marks up groups of 4 numbers each for dna to be able to apply readable CSS */\n\treturn str.split('').reduce((str,c,i,arr) => {\n\n\t\treturn str + ((i+1)%4 === 1 ? '<span class=\"dna-quart1\">' : '') + c + ((i+1)%4 === 0 ? '</span>' : '');\n\t},'');\n}\n\nconst getVAlign = vAlign => {\n\t// >>> as helper\n\tconst alignItems = vAlign === 'top'    ? 'flex-start'\n\t\t\t\t \t : vAlign === 'center' ? 'center'\n\t\t\t\t \t : vAlign === 'bottom' ? 'flex-end' : 'flex-end';\n\treturn `align-items: ${alignItems};`;\n}\n\nconst vColor = val => {\n\t/* Value to color map for vmap */\n\treturn val == 0 ? '#000000'\n\t\t : val == 1 ? '#4757ff'\n\t\t : val == 2 ? '#ff0044'\n\t\t : val == 3 ? '#00ff5f'\n\t\t : NaN;\n};\n"],"sourceRoot":""}